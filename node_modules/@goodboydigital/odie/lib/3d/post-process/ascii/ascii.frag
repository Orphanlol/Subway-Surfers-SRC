export default "varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform sampler2D uMap;\nvarying vec2 vTextureCoord;\nuniform vec4 filterArea;\nuniform float pixelSize;\nuniform sampler2D uSampler;\nvec2 mapCoord( vec2 coord ) {\n    coord *= filterArea.xy;\n    coord += filterArea.zw;\n    return coord;\n}\nvec2 unmapCoord( vec2 coord ) {\n    coord -= filterArea.zw;\n    coord /= filterArea.xy;\n    return coord;\n}\nvec2 pixelate(vec2 coord, vec2 size) {\n    return floor( coord / size ) * size;\n}\nvec2 getMod(vec2 coord, vec2 size) {\n    return mod( coord, size) / size;\n}\nfloat character(float n, vec2 p) {\n    p = floor(p*vec2(4.0, -4.0) + 2.5);\n    if (clamp(p.x, 0.0, 4.0) == p.x) {\n        if (clamp(p.y, 0.0, 4.0) == p.y) {\n            if (int(mod(n/exp2(p.x + 5.0*p.y), 2.0)) == 1) return 1.0;\n        }\n\n    }\n    return 0.0;\n}\nvoid main() {\n    vec2 coord = mapCoord(vTextureCoord);\n    \n    // get the rounded color..\n    \n    vec2 pixCoord = pixelate(coord, vec2(pixelSize));\n    pixCoord = unmapCoord(pixCoord);\n    vec4 color = texture2D(uSampler, pixCoord);\n    \n    // determine the character to use\n    \n    float gray = (color.r + color.g + color.b) / 3.0;\n    float n = 65536.0;             // .\n    \n    if (gray > 0.2) n = 65600.0;    // :\n    \n    if (gray > 0.3) n = 332772.0;   // *\n    \n    if (gray > 0.4) n = 15255086.0; // o\n    \n    if (gray > 0.5) n = 23385164.0; // &\n    \n    if (gray > 0.6) n = 15252014.0; // 8\n    \n    if (gray > 0.7) n = 13199452.0; // @\n    \n    if (gray > 0.8) n = 11512810.0; // #\n    \n    \n    // get the mod..\n    vec2 modd = getMod(coord, vec2(pixelSize));\n    gl_FragColor = color * character( n, vec2(-1.0) + modd * 2.0);\n}"