export default "\nuniform vec4 uDiffuseColor;\nuniform vec3 uEyePosition;\n\nvarying vec4 vWorldPosition;\nvarying vec3 vWorldNormal;\nuniform vec3 uSpecularColor;\n\nvoid main() {\n\n    vec2 uv;\n    \n    vec3 worldPosition = vWorldPosition.xyz;\n    vec3 eyePosition = uEyePosition;\n    vec3 eyeToSurfaceDir = normalize(worldPosition - eyePosition);\n    \n    // key variables, idea is to override what makes these..\n    vec3 worldNormal;\n\n    float specular = 0.;\n    float gloss = 0.;\n\n    vec3 emissiveColor = vec3(0.);\n    vec3 reflectionColor = vec3(1.);\n    vec4 diffuseColor = uDiffuseColor;\n    float alphaColor = 1.;\n\n    // calculated by the lighting model..\n    vec3 specularColor = vec3(0.);\n    vec3 lightingColor = vec3(0.);\n    \n    \n    vec4 finalColor;\n    \n    {{MATERIAL}}\n\n    {{MAIN}}\n    \n    finalColor.rgb = (diffuseColor.rgb * lightingColor * reflectionColor) + specularColor + emissiveColor;  \n    \n    finalColor.a = 1.;\n    finalColor *= alphaColor;\n\n    {{END}}\n\n    finalColor.rgb = gammaCorrectOutput(finalColor.rgb);\n\n    gl_FragColor = finalColor;\n}"