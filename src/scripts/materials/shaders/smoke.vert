export default "attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aUv;\n\nuniform mat4 uProjectionMatrix;\nuniform mat4 uViewMatrix;\nuniform mat4 uModelMatrix;\n\nvarying vec3 vNormal;\nvarying vec3 vPosition;\nvarying vec4 vScreenPosition;\n\n// ----------------------------------------------------------------------------\n\n#if defined( MAP )\nuniform vec4 uMapFrame;\nuniform float uOffset;\nvarying vec2 vUv;\nvarying float vOffset;\n#endif\n\n// ----------------------------------------------------------------------------\n\n#ifdef BEND\nuniform vec2 uBend;\nvec4 bend(vec4 pos) {\n    float dx = uBend.x;\n    float dy = uBend.y;\n    float z_sqr = pos.w * pos.w;\n\tpos.x = pos.x + z_sqr * dx;\n\tpos.y = pos.y + z_sqr * dy;\n\treturn pos;\n}\n#endif\n\n// ----------------------------------------------------------------------------\n\n#ifdef FOG \nuniform float uFogDistance;\nuniform float uFogDensity;\nvarying float vFogFactor;\nuniform vec3 uFogColor;\nvarying vec3 vFogColor;\n#endif\n\n// ----------------------------------------------------------------------------\n\n#HOOK_VERTEX_START\n\nvoid main() {\n\t\n#if defined( MAP )\n    // vUv = aUv;\n    vOffset = uOffset;\n    vUv = (aUv * uMapFrame.zw ) + uMapFrame.xy;\n#endif\n    \n    #HOOK_VERTEX_MAIN\n\n    vec4 worldPosition =  uModelMatrix * vec4(aPosition, 1.0);\n\tvec4 worldViewPosition =  uProjectionMatrix * uViewMatrix * worldPosition;\n\n    vPosition =  worldPosition.xyz;\n    vScreenPosition = worldViewPosition;\n\n#ifdef BEND\n    gl_Position = bend(worldViewPosition);\n#else\n    gl_Position = worldViewPosition;\n#endif    \n\n#ifdef FOG\n    float depth = worldViewPosition.z - uFogDistance;\n    vFogFactor = clamp(depth / uFogDistance, 0.0, 1.0);\n    vFogColor = uFogColor;\n#endif\n\n    #HOOK_VERTEX_END\n}"